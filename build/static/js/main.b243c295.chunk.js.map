{"version":3,"sources":["pages/Board/components/Card/Card.tsx","pages/Board/components/List/List.tsx","pages/Board/Board.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","props","title","className","List","cards","map","card","id","Board","state","lists","this","list","React","Component","App","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wWAIe,SAASA,EAAKC,GAC3B,IAAQC,EAAUD,EAAVC,MACR,OAAO,oBAAIC,UAAU,OAAd,SAAsBD,ICDhB,SAASE,EAAKH,GAC3B,IAAQC,EAAUD,EAAVC,MACAG,EAAUJ,EAAVI,MACR,OACE,qBAAIF,UAAU,aAAd,UACE,oBAAIA,UAAU,cAAd,SAA6BD,IAC7B,qBAAIC,UAAU,aAAd,UACGE,EAAMC,KAAI,SAACC,GAAD,OACT,cAACP,EAAD,CAAoBE,MAAOK,EAAKL,OAArBK,EAAKC,OAElB,6BACE,wBAAQL,UAAU,YAAlB,uJ,UCTWM,E,kDACnB,WAAYR,GAAgB,IAAD,8BACzB,cAAMA,IACDS,MAAQ,CACXR,MAAO,qGACPS,MAAO,CACL,CACEH,GAAI,EACJN,MAAO,iCACPG,MAAO,CACL,CAAEG,GAAI,EAAGN,MAAO,iEAChB,CAAEM,GAAI,EAAGN,MAAO,yFAChB,CAAEM,GAAI,EAAGN,MAAO,kGAGpB,CACEM,GAAI,EACJN,MAAO,0DACPG,MAAO,CAAC,CAAEG,GAAI,EAAGN,MAAO,uGAE1B,CACEM,GAAI,EACJN,MAAO,6CACPG,MAAO,CACL,CAAEG,GAAI,EAAGN,MAAO,yFAChB,CAAEM,GAAI,EAAGN,MAAO,0GAxBC,E,0CA+B3B,WACE,IAAQA,EAAUU,KAAKF,MAAfR,MACAS,EAAUC,KAAKF,MAAfC,MACR,OACE,sBAAKR,UAAU,iBAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BD,IAC9B,qBAAIC,UAAU,eAAd,UACGQ,EAAML,KAAI,SAACO,GAAD,OACT,cAACT,EAAD,CAAoBF,MAAOW,EAAKX,MAAOG,MAAOQ,EAAKR,OAAxCQ,EAAKL,OAElB,wBAAQL,UAAU,aAAlB,4I,GA1CyBW,IAAMC,WCqB1BC,MAtBf,WACE,OACE,cAAC,IAAD,UACE,gCACE,8BACE,6BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,SAAT,yBAKN,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAAC,EAAD,cCNGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b243c295.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ICard } from '../../../../common/interfaces/ICard';\r\nimport './card.scss';\r\n\r\nexport default function Card(props: ICard): JSX.Element {\r\n  const { title } = props;\r\n  return <li className=\"card\">{title}</li>;\r\n}\r\n","import React from 'react';\r\nimport { IListProps } from '../../../../common/interfaces/IListProps';\r\nimport './list.scss';\r\nimport Card from '../Card/Card';\r\n\r\nexport default function List(props: IListProps): JSX.Element {\r\n  const { title } = props;\r\n  const { cards } = props;\r\n  return (\r\n    <li className=\"list__item\">\r\n      <h3 className=\"list__title\">{title}</h3>\r\n      <ul className=\"list__main\">\r\n        {cards.map((card) => (\r\n          <Card key={card.id} title={card.title} />\r\n        ))}\r\n        <li>\r\n          <button className=\"list__btn\"> Добавить новую карточку</button>\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react';\n// import { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { IProps } from '../../common/interfaces/IProps';\nimport { IState } from '../../common/interfaces/IState';\nimport List from './components/List/List';\nimport './components/Board/board.scss';\n\nexport default class Board extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      title: 'Моя тестовая доска',\n      lists: [\n        {\n          id: 1,\n          title: 'Планы',\n          cards: [\n            { id: 1, title: 'помыть кота' },\n            { id: 2, title: 'приготовить суп' },\n            { id: 3, title: 'сходить в магазин' },\n          ],\n        },\n        {\n          id: 2,\n          title: 'В процессе',\n          cards: [{ id: 4, title: 'посмотреть сериал' }],\n        },\n        {\n          id: 3,\n          title: 'Сделано',\n          cards: [\n            { id: 5, title: 'сделать домашку' },\n            { id: 6, title: 'погулять с собакой' },\n          ],\n        },\n      ],\n    };\n  }\n\n  render(): JSX.Element {\n    const { title } = this.state;\n    const { lists } = this.state;\n    return (\n      <div className=\"board__wrapper\">\n        <h2 className=\"board__title\">{title}</h2>\n        <ul className=\"board__lists\">\n          {lists.map((list) => (\n            <List key={list.id} title={list.title} cards={list.cards} />\n          ))}\n          <button className=\"board__btn\">Добавить новый список</button>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n// import logo from './logo.svg';\nimport './App.css';\nimport Board from './pages/Board/Board';\n\nfunction App(): JSX.Element {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/board\">Board</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          <Route path=\"/board\">\n            <Board />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}